funcao separarSegmento{
// para separar os dados basta pegar as posições certas
Dados aplicacao
Numero porta fonte (16 bits)
Numero porta destino (16 bits)
Janela de recepção (16 bits)
Comprimento de cabeçalho (4 bits)
Flag (6 bits) (ACK,RST,SYN,FIN,PSH,URG)
Soma de verificação
}

funcao tcp{

// coisas adicionais que precisamos saber para controlar a conexão
TamanhoDadosAPlicacao
MSS
Numero de segmentos com dados de aplicação que precisamos enviar= TamanhoDadosAplicacao/MSS
client_isn = aleatorio
//cabeçalho TCP
Numero porta fonte (16 bits)
Numero porta destino (16 bits)
Janela de recepção (16 bits)
Comprimento de cabeçalho (4 bits)
Flag (6 bits) (ACK,RST,SYN,FIN,PSH,URG)
Soma de verificação

//apresentação de três vias
envia segmento tcp com SYN=1 , numeroSeq = aleatorio
recebe segmento tcp com SYN=1 , numeroSeq = server_isn= aleatorio, numeroDeReconhecimento = client_isn +1 e reserva buffers e variaveis para conexão e separa segmento
envia segmento tcp com SYN=0 , numeroDeReconhecimento = server_isn+1

ProximoNumeroSequencia = numeroSeq + 2
SendBase= ProximoNumeroSequencia

loop (True){
          switch (evento):
                evento: enviar segmento x = (parte do dado da aplicação) ( conforme conta Tamanho dados aplicacao/MSS)
                              cria segmento tcp com numero de sequencia ProximoNumeroSequencia
                              se temporizador estiver inativo
                                        inicia temporizador
                              enviar segmento para o IP ( não temos ainda)
                              ProximoNumeroSequencia= proximoNumeroSequencia + tamanho (x)
                              break
                evento: fim de temporização
                              reenviar segmento mais antigo (menor numero de sequencia) não confirmado
                              inicia temporizador
                              break
                evento: recebimento de ACK para o segmento y
                              se y > sendBase
                                    sendBase=y
                                    se na janela existem segmentos não confirmados ainda
                                          inicia temporizador

                              senao // reconhecimento para um segmento mais antigo, indica que houve perda
                                    numeroReconhecimentosRecebidoY++
                                    se numeroReconhecimentosRecebido for igual a 3
                                          reenvia o proximo segmento, um segmento enviado depois do y
}

// fechar conexão
envia segmento tcp com FIN=1
recebe segmento tcp de reconhecimento do servidor tcp
recebe segmento tcp com FIN =1 do servidor TCP
envia segmento de reconhecimento para o servidor TCP


}
